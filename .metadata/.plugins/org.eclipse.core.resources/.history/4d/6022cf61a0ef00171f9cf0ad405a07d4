package hellokk.sort;
/**
 * 插入排序的思想：把数据分为两部分，，一部分数据比另一部分数据小
 * @author iwpoo
 *
 */
public class InsertionSort {
	public static void main(String[] args) {
		 int[] x = { 6, 2, 4, 1, 5, 9 };
         quick_sort(x, 0, x.length - 1);
         for (int item:x)
         {
             System.out.print(item);
         }
        System.out.println();
	}
	static int partition(int[] unsorted, int low, int high)
    {
        int pivot = unsorted[low];
        while (low < high)
        {
            while (low < high && unsorted[high] > pivot) high--;
            unsorted[low] = unsorted[high];
            while (low < high && unsorted[low] <= pivot) low++;
            unsorted[high] = unsorted[low];
        }
        unsorted[low] = pivot;
        return low;
    }

    static void quick_sort(int[] unsorted, int low, int high)
    {
        int loc = 0;
        if (low < high)
        {
            loc = partition(unsorted, low, high);
            quick_sort(unsorted, low, loc - 1);
            quick_sort(unsorted, loc + 1, high);
        }
    }

}